/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_INCLUDE_NANOPB_STATE_FIELD_REGISTRY_PB_H_INCLUDED
#define PB_INCLUDE_NANOPB_STATE_FIELD_REGISTRY_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Assuming the definition of MainControl::State enum */
typedef enum _MainControlState
{
    MainControlState_MC_EMPTY = 0 /* Protobuf enums must start with 0 */
} MainControlState;

/* Assuming the definition of GncControl::State enum */
typedef enum _GncControlState
{
    GncControlState_GNC_EMPTY = 0 /* Again, start with 0 */
} GncControlState;

/* Struct definitions */
typedef struct _SFVector3f
{
    pb_callback_t elements; /* Ensure there are exactly 3 elements */
} SFVector3f;

typedef struct _SFVector4f
{
    pb_callback_t elements; /* Ensure there are exactly 4 elements */
} SFVector4f;

typedef struct _StateFieldRegistry
{
    float time_t_average_cycle_time_us;
    int32_t time_t_control_cycle_limit_us;
    uint32_t time_t_last_cycle_end_us;
    uint64_t last_transition_ccno;
    uint64_t mcl_control_cycle_num;
    MainControlState mc_state;
    MainControlState target_mc_state;
    GncControlState gnc_state;
    GncControlState target_gnc_state;
    bool has_imu_linear_acc_vec_f;
    SFVector3f imu_linear_acc_vec_f;
    bool has_imu_acc_vec_f;
    SFVector3f imu_acc_vec_f;
    bool has_imu_gyr_vec;
    SFVector3f imu_gyr_vec;
    bool has_imu_euler_vec;
    SFVector4f imu_euler_vec;
    bool has_imu_quat;
    SFVector4f imu_quat;
} StateFieldRegistry;

#ifdef __cplusplus
extern "C"
{
#endif

/* Helper constants for enums */
#define _MainControlState_MIN MainControlState_MC_EMPTY
#define _MainControlState_MAX MainControlState_MC_EMPTY
#define _MainControlState_ARRAYSIZE ((MainControlState)(MainControlState_MC_EMPTY + 1))

#define _GncControlState_MIN GncControlState_GNC_EMPTY
#define _GncControlState_MAX GncControlState_GNC_EMPTY
#define _GncControlState_ARRAYSIZE ((GncControlState)(GncControlState_GNC_EMPTY + 1))

#define StateFieldRegistry_mc_state_ENUMTYPE MainControlState
#define StateFieldRegistry_target_mc_state_ENUMTYPE MainControlState
#define StateFieldRegistry_gnc_state_ENUMTYPE GncControlState
#define StateFieldRegistry_target_gnc_state_ENUMTYPE GncControlState

/* Initializer values for message structs */
#define SFVector3f_init_default \
    {                           \
        {                       \
            {NULL}, NULL        \
        }                       \
    }
#define SFVector4f_init_default \
    {                           \
        {                       \
            {NULL}, NULL        \
        }                       \
    }
#define StateFieldRegistry_init_default                                                                                                                                                                                                                                         \
    {                                                                                                                                                                                                                                                                           \
        0, 0, 0, 0, 0, _MainControlState_MIN, _MainControlState_MIN, _GncControlState_MIN, _GncControlState_MIN, false, SFVector3f_init_default, false, SFVector3f_init_default, false, SFVector3f_init_default, false, SFVector4f_init_default, false, SFVector4f_init_default \
    }
#define SFVector3f_init_zero \
    {                        \
        {                    \
            {NULL}, NULL     \
        }                    \
    }
#define SFVector4f_init_zero \
    {                        \
        {                    \
            {NULL}, NULL     \
        }                    \
    }
#define StateFieldRegistry_init_zero                                                                                                                                                                                                                             \
    {                                                                                                                                                                                                                                                            \
        0, 0, 0, 0, 0, _MainControlState_MIN, _MainControlState_MIN, _GncControlState_MIN, _GncControlState_MIN, false, SFVector3f_init_zero, false, SFVector3f_init_zero, false, SFVector3f_init_zero, false, SFVector4f_init_zero, false, SFVector4f_init_zero \
    }

/* Field tags (for use in manual encoding/decoding) */
#define SFVector3f_elements_tag 1
#define SFVector4f_elements_tag 1
#define StateFieldRegistry_time_t_average_cycle_time_us_tag 1
#define StateFieldRegistry_time_t_control_cycle_limit_us_tag 2
#define StateFieldRegistry_time_t_last_cycle_end_us_tag 3
#define StateFieldRegistry_last_transition_ccno_tag 4
#define StateFieldRegistry_mcl_control_cycle_num_tag 5
#define StateFieldRegistry_mc_state_tag 6
#define StateFieldRegistry_target_mc_state_tag 7
#define StateFieldRegistry_gnc_state_tag 8
#define StateFieldRegistry_target_gnc_state_tag 9
#define StateFieldRegistry_imu_linear_acc_vec_f_tag 10
#define StateFieldRegistry_imu_acc_vec_f_tag 11
#define StateFieldRegistry_imu_gyr_vec_tag 12
#define StateFieldRegistry_imu_euler_vec_tag 13
#define StateFieldRegistry_imu_quat_tag 14

/* Struct field encoding specification for nanopb */
#define SFVector3f_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, FLOAT, elements, 1)
#define SFVector3f_CALLBACK pb_default_field_callback
#define SFVector3f_DEFAULT NULL

#define SFVector4f_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, FLOAT, elements, 1)
#define SFVector4f_CALLBACK pb_default_field_callback
#define SFVector4f_DEFAULT NULL

#define StateFieldRegistry_FIELDLIST(X, a)                          \
    X(a, STATIC, SINGULAR, FLOAT, time_t_average_cycle_time_us, 1)  \
    X(a, STATIC, SINGULAR, INT32, time_t_control_cycle_limit_us, 2) \
    X(a, STATIC, SINGULAR, UINT32, time_t_last_cycle_end_us, 3)     \
    X(a, STATIC, SINGULAR, UINT64, last_transition_ccno, 4)         \
    X(a, STATIC, SINGULAR, UINT64, mcl_control_cycle_num, 5)        \
    X(a, STATIC, SINGULAR, UENUM, mc_state, 6)                      \
    X(a, STATIC, SINGULAR, UENUM, target_mc_state, 7)               \
    X(a, STATIC, SINGULAR, UENUM, gnc_state, 8)                     \
    X(a, STATIC, SINGULAR, UENUM, target_gnc_state, 9)              \
    X(a, STATIC, OPTIONAL, MESSAGE, imu_linear_acc_vec_f, 10)       \
    X(a, STATIC, OPTIONAL, MESSAGE, imu_acc_vec_f, 11)              \
    X(a, STATIC, OPTIONAL, MESSAGE, imu_gyr_vec, 12)                \
    X(a, STATIC, OPTIONAL, MESSAGE, imu_euler_vec, 13)              \
    X(a, STATIC, OPTIONAL, MESSAGE, imu_quat, 14)
#define StateFieldRegistry_CALLBACK NULL
#define StateFieldRegistry_DEFAULT NULL
#define StateFieldRegistry_imu_linear_acc_vec_f_MSGTYPE SFVector3f
#define StateFieldRegistry_imu_acc_vec_f_MSGTYPE SFVector3f
#define StateFieldRegistry_imu_gyr_vec_MSGTYPE SFVector3f
#define StateFieldRegistry_imu_euler_vec_MSGTYPE SFVector4f
#define StateFieldRegistry_imu_quat_MSGTYPE SFVector4f

    extern const pb_msgdesc_t SFVector3f_msg;
    extern const pb_msgdesc_t SFVector4f_msg;
    extern const pb_msgdesc_t StateFieldRegistry_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SFVector3f_fields &SFVector3f_msg
#define SFVector4f_fields &SFVector4f_msg
#define StateFieldRegistry_fields &StateFieldRegistry_msg

    /* Maximum encoded size of messages (where known) */
    /* SFVector3f_size depends on runtime parameters */
    /* SFVector4f_size depends on runtime parameters */
    /* StateFieldRegistry_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
